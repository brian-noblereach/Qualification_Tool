// js/utils/export.js - PDF export utility

const ExportUtility = {
  /**
   * Generate PDF report
   */
  async generateReport(data) {
    if (!data) {
      throw new Error('No data provided for export');
    }

    // Validate export data
    const validation = Validators.validateExportData(data);
    if (!validation.valid) {
      throw new Error(`Cannot export: ${validation.errors.join(', ')}`);
    }

    try {
      const { jsPDF } = window.jspdf;
      const doc = new jsPDF();

      // Set document properties
      doc.setProperties({
        title: 'Venture Assessment Report',
        subject: `Assessment of ${data.company.company_overview?.name || 'Company'}`,
        author: 'Venture Assessment Platform',
        keywords: 'venture, assessment, competitive, market',
        creator: 'Venture Assessment Platform'
      });

      // Add pages
      this.addTitlePage(doc, data);
      doc.addPage();
      this.addExecutiveSummary(doc, data);
      doc.addPage();
      this.addCompetitiveAssessment(doc, data);
      doc.addPage();
      this.addMarketAssessment(doc, data);
      
      // Add appendix with full data
      doc.addPage();
      this.addAppendixCover(doc);
      doc.addPage();
      this.addCompanyDetails(doc, data.company);
      doc.addPage();
      this.addCompetitiveDetails(doc, data.competitive);
      doc.addPage();
      this.addMarketDetails(doc, data.market);

      // Generate filename
      const timestamp = new Date().toISOString().split('T')[0];
      const companyName = data.company.company_overview?.name || 'company';
      const filename = `assessment_${companyName.toLowerCase().replace(/\s+/g, '_')}_${timestamp}.pdf`;

      // Save the PDF
      doc.save(filename);

      return filename;
    } catch (error) {
      console.error('Export failed:', error);
      throw error;
    }
  },

  /**
   * Add title page
   */
  addTitlePage(doc, data) {
  const pageWidth = doc.internal.pageSize.width;
  const pageHeight = doc.internal.pageSize.height;

  // Title
  doc.setFontSize(28);
  doc.setFont(undefined, 'bold');
  doc.text('Venture Assessment Report', pageWidth / 2, 60, { align: 'center' });

  // Company name
  doc.setFontSize(20);
  doc.setFont(undefined, 'normal');
  const companyName = data.company.company_overview?.name || 'Unknown Company';
  doc.text(companyName, pageWidth / 2, 80, { align: 'center' });

  // SCA Name
  const scaName = document.getElementById('scaName')?.value || 'Not specified';
  doc.setFontSize(12);
  doc.text(`Assessed by: ${scaName}`, pageWidth / 2, 95, { align: 'center' });

  // Date
  const date = new Date().toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
  doc.text(date, pageWidth / 2, 105, { align: 'center' });

  // Rest of the method continues...

    // Scores box
    const boxY = 120;
    doc.setDrawColor(102, 126, 234);
    doc.setLineWidth(1);
    doc.rect(30, boxY, pageWidth - 60, 80);

    doc.setFontSize(16);
    doc.setFont(undefined, 'bold');
    doc.text('Assessment Results', pageWidth / 2, boxY + 20, { align: 'center' });

    // Competitive scores
    doc.setFontSize(12);
    doc.setFont(undefined, 'normal');
    doc.text('Competitive Risk Assessment', 40, boxY + 40);
    doc.text(`AI Score: ${data.competitive.assessment.score}/9`, 40, boxY + 50);
    doc.text(`User Score: ${data.competitive.userScore}/9`, 40, boxY + 60);

    // Market scores
    doc.text('Market Opportunity Assessment', pageWidth - 100, boxY + 40);
    doc.text(`AI Score: ${data.market.scoring.score}/9`, pageWidth - 100, boxY + 50);
    doc.text(`User Score: ${data.market.userScore}/9`, pageWidth - 100, boxY + 60);

    // Footer
    doc.setFontSize(10);
    doc.setTextColor(128);
    doc.text('Generated by Venture Assessment Platform', pageWidth / 2, pageHeight - 20, { align: 'center' });
  },

  /**
   * Add executive summary
   */
  addExecutiveSummary(doc, data) {
    const pageWidth = doc.internal.pageSize.width;
    let y = 30;

    doc.setFontSize(18);
    doc.setFont(undefined, 'bold');
    doc.text('Executive Summary', 20, y);
    y += 15;

    // Company overview
    doc.setFontSize(14);
    doc.text('Company Overview', 20, y);
    y += 10;

    doc.setFontSize(11);
    doc.setFont(undefined, 'normal');
    const overview = data.company.company_overview;
    const lines = doc.splitTextToSize(
      overview.company_description || overview.mission_statement || 'No description available',
      pageWidth - 40
    );
    doc.text(lines, 20, y);
    y += lines.length * 5 + 10;

    // Key metrics
    doc.setFontSize(14);
    doc.setFont(undefined, 'bold');
    doc.text('Key Metrics', 20, y);
    y += 10;

    doc.setFontSize(11);
    doc.setFont(undefined, 'normal');
    
    // Competitive metrics
    const competitive = data.competitive.formatted;
    doc.text(`• Total Competitors: ${competitive.totalCompetitors}`, 25, y);
    y += 7;
    doc.text(`• Competitive Intensity: ${Formatters.competitiveIntensity(competitive.competitiveIntensity)}`, 25, y);
    y += 7;
    doc.text(`• Market Leaders: ${competitive.marketLeaders.length}`, 25, y);
    y += 10;

    // Market metrics
    const market = data.market.formatted;
    doc.text(`• Total Addressable Market: ${Formatters.currency(market.primaryMarket.tam)}`, 25, y);
    y += 7;
    doc.text(`• Growth Rate (CAGR): ${Formatters.percentage(market.primaryMarket.cagr)}`, 25, y);
    y += 7;
    doc.text(`• Market Category: ${Formatters.tamCategory(market.tamCategory)}`, 25, y);
    y += 15;

    // Assessment summary
    doc.setFontSize(14);
    doc.setFont(undefined, 'bold');
    doc.text('Assessment Summary', 20, y);
    y += 10;

    doc.setFontSize(11);
    doc.setFont(undefined, 'normal');
    
    const avgAiScore = (data.competitive.assessment.score + data.market.scoring.score) / 2;
    const avgUserScore = (data.competitive.userScore + data.market.userScore) / 2;
    
    doc.text(`Average AI Score: ${avgAiScore.toFixed(1)}/9`, 25, y);
    y += 7;
    doc.text(`Average User Score: ${avgUserScore.toFixed(1)}/9`, 25, y);
  },

  /**
   * Add competitive assessment page
   */
  addCompetitiveAssessment(doc, data) {
    const pageWidth = doc.internal.pageSize.width;
    let y = 30;

    doc.setFontSize(18);
    doc.setFont(undefined, 'bold');
    doc.text('Competitive Risk Assessment', 20, y);
    y += 15;

    // Scores
    doc.setFontSize(12);
    doc.text(`AI Score: ${data.competitive.assessment.score}/9`, 20, y);
    doc.text(`User Score: ${data.competitive.userScore}/9`, 100, y);
    y += 10;

    // User justification
    if (data.competitive.userJustification) {
      doc.setFontSize(11);
      doc.setFont(undefined, 'bold');
      doc.text('User Justification:', 20, y);
      y += 7;
      
      doc.setFont(undefined, 'normal');
      const justLines = doc.splitTextToSize(data.competitive.userJustification, pageWidth - 40);
      doc.text(justLines, 20, y);
      y += justLines.length * 5 + 10;
    }

    // AI reasoning
    doc.setFont(undefined, 'bold');
    doc.text('AI Assessment:', 20, y);
    y += 7;
    
    doc.setFont(undefined, 'normal');
    const aiLines = doc.splitTextToSize(
      data.competitive.assessment.score_justification || 'No justification provided',
      pageWidth - 40
    );
    doc.text(aiLines, 20, y);
    y += aiLines.length * 5 + 10;

    // Key risks
    if (y < 200) {
      doc.setFont(undefined, 'bold');
      doc.text('Key Risks:', 20, y);
      y += 7;
      
      doc.setFont(undefined, 'normal');
      const risks = data.competitive.assessment.key_risk_factors || [];
      risks.slice(0, 5).forEach(risk => {
        const riskLines = doc.splitTextToSize(`• ${risk}`, pageWidth - 45);
        doc.text(riskLines, 25, y);
        y += riskLines.length * 5 + 2;
      });
    }
  },

  /**
   * Add market assessment page
   */
  addMarketAssessment(doc, data) {
    const pageWidth = doc.internal.pageSize.width;
    let y = 30;

    doc.setFontSize(18);
    doc.setFont(undefined, 'bold');
    doc.text('Market Opportunity Assessment', 20, y);
    y += 15;

    // Scores
    doc.setFontSize(12);
    doc.text(`AI Score: ${data.market.scoring.score}/9`, 20, y);
    doc.text(`User Score: ${data.market.userScore}/9`, 100, y);
    y += 10;

    // User justification
    if (data.market.userJustification) {
      doc.setFontSize(11);
      doc.setFont(undefined, 'bold');
      doc.text('User Justification:', 20, y);
      y += 7;
      
      doc.setFont(undefined, 'normal');
      const justLines = doc.splitTextToSize(data.market.userJustification, pageWidth - 40);
      doc.text(justLines, 20, y);
      y += justLines.length * 5 + 10;
    }

    // AI reasoning
    doc.setFont(undefined, 'bold');
    doc.text('AI Assessment:', 20, y);
    y += 7;
    
    doc.setFont(undefined, 'normal');
    const aiLines = doc.splitTextToSize(
      data.market.scoring.justification?.summary || 'No justification provided',
      pageWidth - 40
    );
    doc.text(aiLines, 20, y);
    y += aiLines.length * 5 + 10;

    // Market details
    doc.setFont(undefined, 'bold');
    doc.text('Primary Market:', 20, y);
    y += 7;
    
    doc.setFont(undefined, 'normal');
    doc.text(`• TAM: ${Formatters.currency(data.market.analysis.primary_market.tam_usd)}`, 25, y);
    y += 7;
    doc.text(`• CAGR: ${Formatters.percentage(data.market.analysis.primary_market.cagr_percent)}`, 25, y);
    y += 7;
    doc.text(`• Description: ${data.market.analysis.primary_market.description}`, 25, y);
  },

  /**
   * Add appendix cover page
   */
  addAppendixCover(doc) {
    const pageWidth = doc.internal.pageSize.width;
    const pageHeight = doc.internal.pageSize.height;

    doc.setFontSize(24);
    doc.setFont(undefined, 'bold');
    doc.text('APPENDIX', pageWidth / 2, pageHeight / 2 - 20, { align: 'center' });

    doc.setFontSize(14);
    doc.setFont(undefined, 'normal');
    doc.text('Detailed Analysis Data', pageWidth / 2, pageHeight / 2, { align: 'center' });
  },

  /**
   * Add company details to appendix
   */
  addCompanyDetails(doc, company) {
	  let y = 30;

	  doc.setFontSize(16);
	  doc.setFont(undefined, 'bold');
	  doc.text('Company Details', 20, y);
	  y += 12;

	  // Narrative Summary
	  doc.setFontSize(12);
	  doc.setFont(undefined, 'bold');
	  doc.text('Executive Summary', 20, y);
	  y += 8;
	  
	  doc.setFontSize(10);
	  doc.setFont(undefined, 'normal');
	  
	  const overview = company.company_overview || {};
	  const tech = company.technology || {};
	  const market = company.market_context || {};
	  
	  // Create narrative
	  const narrative = `${overview.name || 'The company'} is a ${overview.company_stage || 'technology'} stage company founded in ${overview.founded_year || 'recent years'}. ${overview.company_description || overview.mission_statement || 'The company focuses on innovative technology solutions.'}

	The company's core technology involves ${tech.core_technology || 'advanced solutions'} in the ${tech.technology_category || 'technology'} category. ${tech.technical_approach || ''}

	Operating in the ${market.industry || 'technology'} industry, the company addresses ${market.problem_addressed || 'market needs'} with a value proposition of ${market.value_proposition || 'innovative solutions'}.`;

	  const narrativeLines = doc.splitTextToSize(narrative, 170);
	  narrativeLines.forEach(line => {
		if (y > 270) {
		  doc.addPage();
		  y = 30;
		}
		doc.text(line, 20, y);
		y += 5;
	  });
	  
	  y += 10;
	  
	  // Detailed Table
	  if (y > 200) {
		doc.addPage();
		y = 30;
	  }
	  
	  doc.setFontSize(12);
	  doc.setFont(undefined, 'bold');
	  doc.text('Detailed Information', 20, y);
	  y += 8;
	  
	  // Create table format
	  const details = [
		['Company Name', overview.name || '-'],
		['Website', overview.website || '-'],
		['Founded', overview.founded_year || '-'],
		['Stage', overview.company_stage || '-'],
		['Employees', overview.employee_count || '-'],
		['Headquarters', overview.headquarters || '-'],
		['Industry', market.industry || '-'],
		['Business Model', market.business_model || '-']
	  ];
	  
	  doc.setFontSize(10);
	  details.forEach(([label, value]) => {
		if (y > 270) {
		  doc.addPage();
		  y = 30;
		}
		doc.setFont(undefined, 'bold');
		doc.text(label + ':', 20, y);
		doc.setFont(undefined, 'normal');
		const valueLines = doc.splitTextToSize(String(value), 120);
		doc.text(valueLines, 70, y);
		y += valueLines.length * 5 + 2;
	  });
	},

  /**
   * Add competitive details to appendix
   */
  addCompetitiveDetails(doc, competitive) {
  let y = 30;

  doc.setFontSize(16);
  doc.setFont(undefined, 'bold');
  doc.text('Competitive Analysis Details', 20, y);
  y += 12;

  doc.setFontSize(10);
  doc.setFont(undefined, 'normal');

  // Add summary details first
  const details = [
    `Total Competitors: ${competitive.assessment.competitor_count.total}`,
    `Competitive Intensity: ${competitive.assessment.competitive_intensity}`,
    `Confidence Level: ${competitive.analysis.data_quality?.confidence_level || 'N/A'}`,
    '',
    'Market Leaders:',
    ...competitive.assessment.market_leaders.slice(0, 5).map(leader => `  • ${leader}`),
  ];

  details.forEach(line => {
    if (y > 270) {
      doc.addPage();
      y = 30;
    }
    doc.text(line, 20, y);
    y += 6;
  });

  // Add ALL competitors
  y += 10;
  if (y > 240) {
    doc.addPage();
    y = 30;
  }
  
  doc.setFont(undefined, 'bold');
  doc.text('All Identified Competitors:', 20, y);
  y += 8;
  
  doc.setFont(undefined, 'normal');
  const allCompetitors = competitive.analysis.competitors || [];
  
  allCompetitors.forEach((comp, index) => {
    if (y > 250) {
      doc.addPage();
      y = 30;
    }
    
    // Company name and size
    doc.setFont(undefined, 'bold');
    doc.text(`${index + 1}. ${comp.company_name || 'Unknown'}`, 25, y);
    doc.setFont(undefined, 'normal');
    doc.text(`(${comp.size_category || 'Unknown size'})`, 120, y);
    y += 6;
    
    // Product/Description
    if (comp.product_description) {
      const descLines = doc.splitTextToSize(comp.product_description, 160);
      descLines.slice(0, 2).forEach(line => {
        doc.text(line, 30, y);
        y += 5;
      });
    }
    y += 3;
  });

  // Add risk factors
  if (y > 220) {
    doc.addPage();
    y = 30;
  }
  
  y += 10;
  doc.setFont(undefined, 'bold');
  doc.text('Key Risk Factors:', 20, y);
  y += 8;
  doc.setFont(undefined, 'normal');
  
  competitive.assessment.key_risk_factors.forEach(risk => {
    if (y > 270) {
      doc.addPage();
      y = 30;
    }
    const riskLines = doc.splitTextToSize(`• ${risk}`, 170);
    riskLines.forEach(line => {
      doc.text(line, 25, y);
      y += 5;
    });
    y += 2;
  });
},

  /**
   * Add market details to appendix
   */
  addMarketDetails(doc, market) {
  let y = 30;

  doc.setFontSize(16);
  doc.setFont(undefined, 'bold');
  doc.text('Market Analysis Details', 20, y);
  y += 12;

  // Primary market
  doc.setFontSize(12);
  doc.text('Primary Market', 20, y);
  y += 8;
  
  doc.setFontSize(10);
  doc.setFont(undefined, 'normal');
  doc.text(`Description: ${market.analysis.primary_market.description}`, 25, y);
  y += 6;
  doc.text(`TAM: ${Formatters.currency(market.analysis.primary_market.tam_usd)}`, 25, y);
  y += 6;
  doc.text(`CAGR: ${Formatters.percentage(market.analysis.primary_market.cagr_percent)}`, 25, y);
  y += 10;

  // All market segments
  doc.setFont(undefined, 'bold');
  doc.text('All Market Segments Analyzed:', 20, y);
  y += 8;
  
  doc.setFont(undefined, 'normal');
  market.analysis.markets.forEach((mkt, index) => {
    if (y > 250) {
      doc.addPage();
      y = 30;
    }

    doc.setFont(undefined, 'bold');
    doc.text(`${index + 1}. ${mkt.description}`, 25, y);
    y += 6;
    
    doc.setFont(undefined, 'normal');
    doc.text(`  TAM: ${Formatters.currency(mkt.tam_current_usd)}`, 30, y);
    y += 5;
    doc.text(`  CAGR: ${Formatters.percentage(mkt.cagr_percent)}`, 30, y);
    y += 5;
    doc.text(`  Confidence: ${Formatters.confidence(mkt.confidence)}`, 30, y);
    y += 8;
  });

  // Market opportunities
  if (y > 220) {
    doc.addPage();
    y = 30;
  }
  
  y += 10;
  doc.setFont(undefined, 'bold');
  doc.text('Market Opportunities:', 20, y);
  y += 8;
  doc.setFont(undefined, 'normal');
  
  const opportunities = market.analysis.market_analysis?.opportunities || [];
  opportunities.forEach(opp => {
    if (y > 270) {
      doc.addPage();
      y = 30;
    }
    const oppLines = doc.splitTextToSize(`• ${opp}`, 170);
    oppLines.forEach(line => {
      doc.text(line, 25, y);
      y += 5;
    });
y += 2;
  });
}
}

// Make available globally
window.ExportUtility = ExportUtility;